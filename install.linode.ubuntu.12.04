- I picked Newark for the location
- I picked 512MB swap and used the rest for the single server
- Assigned IP is 162.216.16.102 (li605-102.members.linode.com)
- IPv6 2600:3c03::f03c:91ff:fedb:abd1/64
- Don't forget to configure DNS
- DNS servers:
    ns1.linode.com
    ns2.linode.com
    ns3.linode.com
    ns4.linode.com
    ns5.linode.com
- And make sure to add an SPF record - it's a text record. By default,
  it's just:
  "v=spf1 mx -all"
- Which says "accept mail from the server listed in our mx record" (as
  if that wasn't obvious)


1. Updates!

sudo apt-get update
sudo apt-get dist-upgrade

2. Make accounts
    adduser matt
    usermod -a -G sudo,adm matt
    adduser liz
    usermod -a -G sudo,adm liz

3. Install users authorized_keys files in to ~/.ssh

4. Set up ssh

## For an old machine, use the old keys - you did save /etc, didn't you?

## For a new machine, use the new keys generated by the distro.

- make sure to add to the firewall
ufw allow ssh

- set:
    PermitRootLogin forced-commands-only
- (the forced commands only is so we can run backups)
- and set
    PasswordAuthentication no

- restart it
service ssh restart

5. Enable firewall

sudo ufw enable

6. Install useful things

sudo apt-get install tree emacs23-nox

7. Copy in certs

- copy mattcaron.net into /etc/ssh/private
sudo chown -R root:ssl-cert /etc/ssh/private/mattcaron.net
sudo chmod g+x /etc/ssh/private/mattcaron.net
sudo chmod g+r /etc/ssh/private/mattcaron.net/*

8. Install apache
    See install.apache

- However, we want it to listen publicly, so don't make it only
  listen on 127.0.0.1

- Allow it through the firewall

    sudo ufw allow http
    sudo ufw allow https

9. Install wordpress bits
    See wordpress (the top of it, the rest of it is just notes)

10. Install dovecot (imap)

- Based on: https://help.ubuntu.com/community/Dovecot

- Install it:

sudo apt-get install dovecot-imapd

- configure it

- edit /etc/dovecot/conf.d/10-master.conf and:
  - find the `inet_listener `imaps` line, and uncomment the body.
  - ref: http://wiki2.dovecot.org/HowTo/EximAndDovecotSASL
  - find the `service auth` section and add to the bottom:
  #SASL                                                                         
  unix_listener auth-client {
    mode = 0600
    user = Debian-exim
  }

- edit /etc/dovecot/conf.d/10-mail.conf and find the mail_location
  line, uncomment it and set it to:

    mail_location = maildir:/home/%u/Maildir

- edit /etc/dovecot/conf.d/10-ssl.conf and change it to use the
  mattcaron.net cert:

    ssl_cert = </etc/ssl/private/mattcaron.net/cert            
    ssl_key = </etc/ssl/private/mattcaron.net/key

  - and change ssl to "required"

    ssl = required

- edit /etc/dovecot/conf.d/10-imap.conf and set:
    mail_max_userip_connections = 100
- (because I have a ton of machines that poll for email)

- Pre-create the maildir for new users

sudo maildirmake.dovecot /etc/skel/Maildir
sudo maildirmake.dovecot /etc/skel/Maildir/.Drafts
sudo maildirmake.dovecot /etc/skel/Maildir/.Sent
sudo maildirmake.dovecot /etc/skel/Maildir/.Trash
sudo maildirmake.dovecot /etc/skel/Maildir/.Templates
sudo maildirmake.dovecot /etc/skel/Maildir/.Junk

- Then, for an existing user:

sudo cp -r /etc/skel/Maildir /home/myuser/
sudo chown -R myuser:usergroup /home/myuser/Maildir
sudo chmod -R 700 /home/myuser/Maildir

- Allow through firewall

sudo ufw allow imaps

11. Exim

- install it

sudo apt-get install exim4-daemon-heavy exim4

- find the default exim configuration file (called configure.default,
  and found in the src/ directory of the source code and modify it as follows:

primary_hostname = mattcaron.net
domainlist local_domains = mattcaron.net : fishhousefishandgame.com
domainlist relay_to_domains =
hostlist   relay_from_hosts = localhost
tls_advertise_hosts = *
tls_certificate = /etc/ssl/private/mattcaron.net/cert
tls_privatekey = /etc/ssl/private/mattcaron.net/key
daemon_smtp_ports = 25 : 465
tls_on_connect_ports = 465
qualify_domain = mattcaron.net
auth_advertise_hosts = ${if eq {$tls_cipher}{}{}{*}}

- Find the system_aliases router and change the line:
  data = ${lookup{$local_part}lsearch{SYSTEM_ALIASES_FILE}}
- to:
  data = ${lookup{$local_part}lsearch{/etc/aliases}}

- Ref: https://github.com/Exim/exim/wiki/AuthenticatedSmtpUsingPam
- at the bottom of the main section (before ACL CONFIGURATION), add:

# Only allow auth over TLS, otherwise folks would be sending plaintext
# passwords
auth_advertise_hosts = ${if eq {$tls_cipher}{}{}{*}}

- ref: http://wiki2.dovecot.org/HowTo/EximAndDovecotSASL
- and down at the bottom, at the end of the AUTHENTICATION CONDITION

dovecot_plain:
  driver = dovecot
  public_name = PLAIN
  server_socket = /var/run/dovecot/auth-client
  server_set_id = $auth1


- Note that we don't use the default debian config, as it is annoying.

- then copy it to /etc/exim4/exim4.conf on the remote server. Make
  sure it's group readable and growned by Debian-exim

- make the Debian-exim user a member of the shadow group so it can
  read /etc/shadow and therefore do authentication. Also, the ssl-cert
  group, so it can read certs

sudo usermod -a -G ssl-cert Debian-exim

- and make a pam config for it - we'll just piggyback on the dovecot
  one, as it's reasonable and similar

sudo ln -s dovecot exim4

- allow through firewall

sudo ufw allow smtp
sudo ufw allow ssmtp

12. Integrate exim with dovecot

- ref: http://wiki2.dovecot.org/LDA/Exim
- edit /etc/exim4/exim4.conf

- in 

localuser:
  driver = accept
  check_local_user
# local_part_suffix = +* : -*
# local_part_suffix_optional
  transport = dovecot_delivery

- Next create a new transport for dovecot-lda:

dovecot_delivery:
  driver = pipe
  # You may or may not want to add -d $local_part@$domain depending on if
  # you need a userdb lookup done.
  command = /usr/lib/dovecot/dovecot-lda -f $sender_address
  message_prefix =
  message_suffix =
  log_output
  delivery_date_add
  envelope_to_add
  return_path_add
  #group = mail
  #mode = 0660
  temp_errors = 64 : 69 : 70: 71 : 72 : 73 : 74 : 75 : 78

- Next create a new transport for dovecot-lda - spammy version

dovecot_delivery_junk:
  driver = pipe
  # You may or may not want to add -d $local_part@$domain depending on if
  # you need a userdb lookup done.
  command = /usr/lib/dovecot/dovecot-lda -f $sender_address -m Junk
  message_prefix =
  message_suffix =
  log_output
  delivery_date_add
  envelope_to_add
  return_path_add
  #group = mail
  #mode = 0660
  temp_errors = 64 : 69 : 70: 71 : 72 : 73 : 74 : 75 : 78

- IMPORTANT: 
In recent TBs, you need to add the exception in TB in order to
progress past the "probe" UI.

Edit->Preferences->Advanced->Certificates->View Certificates
Servers tab -> Add Exception -> servername:993

(and then do the same for port 465 for smtp)

13. Configure the time zone:

sudo dpkg-reconfigure tzdata

- and set it to US/Eastern

14. Add spamassassin

- install

sudo apt-get install spamassassin

- add the following router right before "localuser"

# router to send incoming email to spamchek transport for checking 
spamcheck_router:
  no_verify
  check_local_user
  # When to scan a message :
  #   -   it isn't already flagged as spam
  #   -   it isn't already scanned
  condition = "${if and { {!def:h_X-Spam-Flag:} {!eq {$received_protocol}{spam-scanned}}} {1}{0}}"
  driver = accept
  transport = spamcheck

# router to deliver spam to the junk folder
spam_deliver_to_junk
  driver = accept
  check_local_user
  local_parts = !www:!root:!nobody:!postmaster:!abuse:!admin
  transport = dovecot_spam_junk_delivery
  condition = ${if def:h_X-Spam-Flag: {true}}

- add the following transport (it can go anywhere, order doesn't matter)

# Scan for spam via spamassassin. Note that this works by calling exim
# *again* and essentially redlivering the message, except that it has
# already been scanned (see the "spam-scanned" add here, and the conditional
# up in the router), so it only gets called the first time
spamcheck:
  debug_print = "T: spamassassin_pipe for $local_part@$domain"
  driver = pipe
  command = /usr/sbin/exim4 -oMr spam-scanned -bS
  use_bsmtp
  transport_filter = /usr/bin/spamc
  home_directory = "/tmp"
  current_directory = "/tmp"
  user = Debian-exim
  group = Debian-exim
  return_fail_output
  message_prefix =
  message_suffix =

# This delivers mail via dovecot to the Junk folder. 
dovecot_spam_junk_delivery:
  driver = pipe
  # You may or may not want to add -d $local_part@$domain depending on if 
  # you need a userdb lookup done.
  command = /usr/lib/dovecot/dovecot-lda -f $sender_address -m Junk
  message_prefix =
  message_suffix =
  log_output
  delivery_date_add
  envelope_to_add
  return_path_add
  #group = mail
  #mode = 0660
  temp_errors = 64 : 69 : 70: 71 : 72 : 73 : 74 : 75 : 78

- Once all of the above is set up, edit /etc/default/spamassassin and set:

  ENABLED=1

- restart

  sudo service spamassassin restart

15. Edit /etc/aliases

- change root to go to matt:

root: matt

16. Add sympa

- This install kind of sucks, see bug here:
https://bugs.launchpad.net/ubuntu/+source/sympa/+bug/1195044

- Install

sudo apt-get install sympa apache2-suexec

- enable it

sudo a2enmod suexec

- it will ask:
 - about webserver, it's apache 2
 - whether to restart it, choose no.
 - whether to use dbconfig-common to configure it, choose yes, and
   give it the credentials it's asking for
 - At this point, the install will fail because of the bug described
   above. Fix it

sudo chown -R sympa:sympa /var/spool/sympa
sudo chown -R sympa:sympa /usr/lib/sympa
sudo chown -R sympa:sympa /var/lib/sympa

  - edit /etc/sympa/wwsympa.conf
  - comment out:
    #ldap_force_canonical_email 1
  
  - edit /etc/sympa/sympa.conf
    listmaster              matt@mattcaron.net
    create_list listmaster
 wwsympa_url https://sympa.mattcaron.net/wws

  - to clean up the installation errors - just ignore mysql errors
apt-get autoremove

- edit /etc/exim4/exim4.conf and add the following below system_aliases:

# Aliases for sympa                                                             
sympa_aliases:
  driver = redirect
  domains = +local_domains
  allow_fail
  allow_defer
  data = ${lookup{$local_part}lsearch{/etc/mail/sympa/aliases}}
  user = sympa
  group = sympa
  file_transport = address_file
  pipe_transport = address_pipe

sympa_aliases:
  driver = redirect
  allow_fail
  allow_defer
  data = ${lookup{$local_part}lsearch{/etc/mail/sympa_aliases}}
  file_transport = address_file
  pipe_transport = address_pipe

- remove /etc/apache2/conf.d/sympa (it's just a symlink) and instead set up 
  /etc/apache2/sites-available/sympa as follows:

<VirtualHost *:80>
    ServerName sympa.mattcaron.net
    ServerAdmin matt@mattcaron.net
    Redirect permanent / https://sympa.mattcaron.net/wws
</VirtualHost>

<VirtualHost *:443>
    ServerName sympa.mattcaron.net
    ServerAdmin matt@mattcaron.net

    SSLEngine on
    SSLCertificateFile    /etc/ssl/private/mattcaron.net/cert
    SSLCertificateKeyFile /etc/ssl/private/mattcaron.net/key

    Alias /static-sympa /var/lib/sympa/static_content
    ScriptAlias /wws /var/www/sympa/wwsympa.cgi
    SuexecUserGroup sympa sympa

    # Use simple cgi here. It's not heavily used and base cgi is the most 
    # compatible
    AddHandler cgi-script .fcgi .cgi .pl .sh

    RewriteEngine On
    RewriteRule  ^/$                 /wws  [R,L]

    <Directory "/var/www/sympa/">
        AllowOverride None
        Options ExecCGI
        Order allow,deny
        Allow from all
    </Directory>
 </VirtualHost>


- Fake out suexec, because it is hardcoded to want things in /var/www
 - make dir
sudo mkdir /var/www/sympa/
sudo chmod a+rx /var/www/sympa/
sudo chown sympa:sympa /var/www/sympa/

 - create /var/www/sympa/wwsympa.cgi:
#!/bin/sh
# The script we want Sympa to execute is accessed via a symlink but
# suexec doesn't like that so this script is a wrapper which gets
# executed directly to avoid that problem.
exec /usr/lib/cgi-bin/sympa/wwsympa.fcgi

- fix the perms on it

sudo chown sympa:sympa /var/www/sympa/wwsympa.cgi
sudo chmod u+x /var/www/sympa//wwsympa.cgi

- Restart things

sudo service apache2 restart
sudo service sympa restart

- Don't forget to add sympa.mattcaron.net to DNS

- edit /etc/sympa/topics.conf, delete everything, then add:
gaming
title Gaming

gaming/roleplaying_games
title Role Playing Games

gaming/wargaming
title Wargaming


#### TODO ####

- Backups
- Other server setup stuff (logcheck, etc)
- OwnCloud
- Change the fishhousefishandgameclub.com to just be a redirect, not
  an alias.

