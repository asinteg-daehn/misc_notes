0.) PreInstall
	- save the following:
		/etc
		/boot/grub
		/usr/src
		/var/yp (on NIS servers only)

1.) Fix all the shell stuff
	- delete all the shell files in root's account
    In /etc:
	- copy csh.cshrc, bashrc, profile 
	- delete csh.login
	- fix /etc/default/useradd
	- change root's shell to tcsh

2.) Install rpms from CD's:
	for NIS server: ypserv - CD3
	gv - CD3
	sharutils - CD3
	itcl - CD3
	xmms-devel - CD3
	gstreamer-devel - CD3
	gstreamer-plugins - CD3

3.) Add/configure services (not all of these will work yet; we'll get there)
	in /etc/init.d, copy :
		hdparm-mc (see note)
		portsentry-mc
		alsasound-mc
	then run:
		chkconfig --add <name>
	on all of them

	Note: hdparm might need to be tweaked for specific hardware, but 
		I doubt it

	- then run redhat-config-services and configure the services
		you want
	REMEMBER:
	NIS server needs:
		- time
		- portmap
		- yppasswdd
		- ypserv
		- ypxfrd

	NFS server needs (addl to above)
		- nfs
		- nfslock

	NIS clients need:
		- time
		- portmap

	NFS clients need:
		- nfslock
		- netfs

4.) Set up networking:
	- change it in /etc/sysconfig/network
	- add its hostname in /etc/hosts (or copy /etc/hosts)
	(NIS client - make sure server is in /etc/hosts too)
	- edit/copy /etc/sysconfig/network-scripts/ifcfg-eth0
	- edit/copy /etc/resolv.conf (not necessary for DHCP)

	(if applicable)
	- edit/copy /etc/pcmcia/wireless.opts
	- edit/copy /etc/sysconfig/network-scripts/ifup-wireless
	  replace all the redhat stuff with:
		/etc/pcmcia/wireless start $DEVICE
	  because redhat's way of doing it is silly.

IMPORTANT: If you change the IP address, you might want to disable
sendmail. It seems to get pissed off on reboot. I never use it and
just turn it off, so I don't know why...

5.) Set up /etc/hosts.*
	hosts.deny:
		----------------
		ALL:ALL
		-----------------
	hosts.allow:
		----------------
		sshd: ALL
		# everything below here is only needed by NIS/NFS users
		# only allow portmap entries in /etc/hosts
		portmap: <see note below>
		ntpd: @boxen
		ypserv: @boxen
		ypbind: @boxen
		mountd: @boxen
		nfsd: @boxen
		statd: @boxen
		-----------------
		@boxen = access dictated by NIS netgroup
		Note: unfortunately, portmap doesn't seem to support
		NIS netgroups. So, this needs to be a list of each machine
		needing to connect to it, which is:
		1.) any NIS/NFS server it connects to
		2.) any NIS/NFS client connecting to it.
		So, on clients, it will be 
		portmap: servername myname
		and on the server it will be:
		portmap: myname client1 client2 ....

6.) Compile the kernel with the shit that you want in it 

7.) for machines with 3ware controllers, add the following to
rc.sysinit right before the fsck code

# MC - start 3w-xxxx - must go before fsck in rc.sysinit
if ! strstr "$cmdline" noscsi ; then
   aliases=`/sbin/modprobe -c | awk '/^alias scsi_hostadapter/ { print $3 }'`
   if [ -n "$aliases" -a "$aliases" != "off" ]; then
      for alias in $aliases ; do 
        [ "$alias" = "off" ] && continue
        action $"Initializing SCSI host adapter ($alias): " modprobe $alias
      done
   fi
fi
	

8.) Reboot

9.) Accounts: 
	For IS server or standalone machines:
		Either:
			- Make a "matt" account (UID 500)
			- copy over desired account info for other accounts
		or:
			copy the following files in /etc
			passwd
			shadow
			group
			gshadow

	For NIS servers or NIS clients
		- run redhat-config-authentication and enter NIS info
		- you'll have to restart gdm for it to use it

		#### NIS SERVER ONLY ####
		- the above will probably fail, on the server, because ypserv 
			isn't up yet. It's okay.
		- Once the above is set, start ypserv
		- then, either copy over the old /var/yp, or configure all the
			stuff, then do:

			Create maps:
			/usr/lib/ypinit -m

			If you change anything (such as adding users),
			remember to do:
			make -C /var/yp

10.) Filesystems:
	Remounts:
		/someplace/foo   /otherplace/bar    none    bind    0 0

	NFS server:
		/etc/exports example shares:
			/read_only_sharename           @boxen(ro,sync)
			/read_write_sharename          @boxen(rw,sync)

		if you change anything, do
		exportfs -ra 
	NFS client:
		/etc/fstab
		# device   mountpoint  fs-type     options    dump fsckorder
		case:/dir  /mntpoint    nfs     rw,hard,intr   0    0


11.) Install rpms from /usr/local/apps/rpms
	for new programs: 
		rpm -U *.rpm
	for patches:
		rpm -F *.rpm
	
	if there are failed dependencies, do:
	rpm --nodeps <rest of arguments>

12.) Setup GDM
	- Install themes:
		Either 
			- install all the themes wherever you saved them
		or
			- tar up /usr/share/gdm/themes on one machine
				and put it on another...
	- Configure it safely (gdmconfig)
		- remove system menu
		- no autologin
		- don't allow TCP connections
		- stuff like that

13.) Set up printing:  
CUPS setup (server)
redhat-config-printer-gui
	- Add appropriate printers and stuff
	- Under sharing, have it shared to:
		192.168.1.0/255.255.255.0

Clients will just see printers

14.) in /etc/pam.d, remove the following:
	poweroff
	halt
	reboot

15.) in /etc:
	- copy the following:
		a2ps-site.cfg
		issue
		rm issue.net; ln -s issue issue.net
	- add /usr/local/lib and /usr/lib to ld.so.conf
	
16.) Set up latex:

	cd /usr/share/texmf/tex/latex
	ln -s /usr/local/apps/latex/local .

	then run texconfig and rebuild the ls-R database

	also, change the dvips configuration to be letter papersize instead
	of A4.
	
17.) Fix grub; edit /etc/grub.conf
	change timeout to 5

	(for CD-RW drives):
	add hdX=ide-cdrom to the kernel string
	- chmod 4755 /usr/bin/cdrecord
	- chmod 666 /dev/sg0

18.) Make the logfile readable by me.
	chmod 640 /var/log/messages
	chgrp matt /var/log/messages 

19.) Make ntp work
	cd /etc
	rm ntp.conf
	for NIS server:
	ln -s /usr/local/apps/ntp/ntp.server.conf ./ntp.conf
	for NIS client:
	ln -s /usr/local/apps/ntp/ntp.client.conf ./ntp.conf
	chown -R ntp /etc/ntp

20.) Set up emacs
 	cd /usr/share/emacs/site-lisp
	rm side-start.el
	ln -s /usr/local/apps/emacs/site-start.el .

21.) Add gimp scripts
	cd /usr/share/gimp/1.2/scripts
	ln -s /usr/local/apps/gimp/scripts/* .

22.) Make portsentry work:
	cp -a /usr/local/apps/portsentry/portsentry.etc /etc/portsentry

	Note: THIS MAY FAIL for security reasons (we don't want it readable
	to anyone except root on case. These .<machinename> dirs are 
	for backups of all the keys anyway.

23.) Make ssh work:
	cp -a /usr/local/apps/openssh/etc.<machinename>/* /etc/ssh/

	Note: THIS MAY FAIL for security reasons for NFS clients, in
	which case you'll have to tar it up. (we don't want it
	readable to anyone except root on case. These .<machinename>
	dirs are for backups of all the keys anyway.

	For a new machine, copy etc.skel.
	a.) tweak ssh.conf/sshd.conf as necessary
	b.) generate keys:
		ssh-keygen -t rsa1 -f /etc/ssh/ssh_host_key -N ""
		ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N ""
		ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -N ""

24.) Make samba work (optional)
	mkdir /etc/samba
	cp /usr/local/apps/samba/etc.skel/* .	
	edit /etc/samba/smb.conf so your machine works right
	mkdir /etc/samba/private ; chmod 700 /etc/samba/private
	mkdir /var/samba

25.) Make sure to make any appropriate dvd devices. (Try doing a DVD
under Xine and see what it complains about; I think it wants /dvd.)

26.) for support for the i8k buttons, do a 'make', 'make install' as root and
	then copy the i8kbuttons script into /etc/init.d. Link it to where
	it should be.
	- ln -s /usr/local/apps/i8kutils/i8kmon.conf /etc/i8kmon
28.) For bittorrent support:
	add the following line to /etc/mailcap

application/x-bittorrent; /usr/local/apps/bittorrent/BitTorrent-current/btdownloadgui.py %s; test=test -n "$DISPLAY"

29.) Get rid of the stupid rhn panel applets:
	KDE: /usr/share/config/ksmserverrc 
	GNOME: /usr/share/gnome/default.session 
	The file formats should be self explanatory. Edit them smartly.

30.) Make lots of media formats work
	ln -s /usr/local/apps/win32dlls/dlls ./win32

31.) Fix the hotplug scripts for the scanner:
	add the line:
usbscanner           0x0003      0x05d8   0x4002    0x0000       0x0000       0x
ff         0xff            0xff            0xff            0xff               0x
ff               0x00000000

	to /etc/hotplug/usb.usermap

	and copy the usbscanner script from /usr/local/apps/sane/my_stuff
	to /etc/hotplug/usb.
